@gcd1(u: int, v: int): int {
  v2: int = const 0;
  v3: bool = eq u v2;
  br v3 .then.1 .else.1;
.then.1:
  ret v;
  jmp .endif.1;
.else.1:
  v6: int = const 0;
  v7: bool = eq v v6;
  br v7 .then.1.1 .else.1.1;
.then.1.1:
  ret u;
  jmp .endif.1;
.else.1.1:
  v10: int = const 2;
  lvn.3: int = div u v10;
  lvn.4: int = mul lvn.3 v10;
  v11: int = sub u lvn.4;
  v12: int = const 0;
  v13: bool = eq v11 v12;
  v15: int = const 2;
  lvn.9: int = div v v15;
  lvn.10: int = mul lvn.9 v15;
  v16: int = sub v lvn.10;
  v17: int = const 0;
  v18: bool = eq v16 v17;
  v19: bool = and v13 v18;
  br v19 .then.1.2 .else.1.2;
.then.1.2:
  v20: int = const 2;
  v22: int = const 2;
  v23: int = div u v22;
  v25: int = const 2;
  v26: int = div v v25;
  v27: int = call @gcd1 v23 v26;
  v28: int = mul v20 v27;
  ret v28;
  jmp .endif.1;
.else.1.2:
  v30: int = const 2;
  lvn.2: int = div v v30;
  lvn.3: int = mul lvn.2 v30;
  v31: int = sub v lvn.3;
  v32: int = const 0;
  v33: bool = eq v31 v32;
  br v33 .then.1.3 .else.1.3;
.then.1.3:
  v36: int = const 2;
  v37: int = div v v36;
  v38: int = call @gcd1 u v37;
  ret v38;
  jmp .endif.1;
.else.1.3:
  v41: bool = gt u v;
  br v41 .then.2 .else.2;
.then.2:
  v42: int = id u;
  u: int = id v;
  v: int = id v42;
  jmp .endif.2;
.else.2:
.endif.2:
  v48: int = sub v u;
  v49: int = call @gcd1 u v48;
  ret v49;
.endif.1:
}
@gcd2(u: int, v: int): int {
  k: int = const 1;
  v2: int = const 0;
  v3: bool = eq u v2;
  br v3 .then.1 .else.1;
.then.1:
  ret v;
  jmp .endif.1;
.else.1:
.endif.1:
  v6: int = const 0;
  v7: bool = eq v v6;
  br v7 .then.2 .else.2;
.then.2:
  ret u;
  jmp .endif.2;
.else.2:
.endif.2:
.entry.3:
  v10: int = const 2;
  lvn.3: int = div u v10;
  lvn.4: int = mul lvn.3 v10;
  v11: int = sub u lvn.4;
  v12: int = const 0;
  v13: bool = eq v11 v12;
  v15: int = const 2;
  lvn.9: int = div v v15;
  lvn.10: int = mul lvn.9 v15;
  v16: int = sub v lvn.10;
  v17: int = const 0;
  v18: bool = eq v16 v17;
  v19: bool = and v13 v18;
  br v19 .body.3 .exit.3;
.body.3:
  v21: int = const 2;
  v22: int = mul k v21;
  k: int = id v22;
  v24: int = const 2;
  v25: int = div u v24;
  u: int = id v25;
  v27: int = const 2;
  v28: int = div v v27;
  v: int = id v28;
  jmp .entry.3;
.exit.3:
.entry.4:
  v30: int = const 0;
  v31: bool = gt u v30;
  v33: int = const 2;
  lvn.4: int = div u v33;
  lvn.5: int = mul lvn.4 v33;
  v34: int = sub u lvn.5;
  v35: int = const 0;
  v36: bool = eq v34 v35;
  v37: bool = and v31 v36;
  br v37 .body.4 .exit.4;
.body.4:
  v39: int = const 2;
  v40: int = div u v39;
  u: int = id v40;
  jmp .entry.4;
.exit.4:
.entry.5:
  v42: int = const 0;
  v43: bool = gt v v42;
  v45: int = const 2;
  lvn.4: int = div v v45;
  lvn.5: int = mul lvn.4 v45;
  v46: int = sub v lvn.5;
  v47: int = const 0;
  v48: bool = eq v46 v47;
  v49: bool = and v43 v48;
  br v49 .body.5 .exit.5;
.body.5:
  v51: int = const 2;
  v52: int = div v v51;
  v: int = id v52;
  jmp .entry.5;
.exit.5:
.entry.6:
  v53: bool = const true;
  br v53 .body.6 .exit.6;
.body.6:
  v56: bool = gt u v;
  br v56 .then.7 .else.7;
.then.7:
  v57: int = id u;
  u: int = id v;
  v: int = id v57;
  jmp .endif.7;
.else.7:
.endif.7:
  v62: int = sub v u;
  v: int = id v62;
  v64: int = const 0;
  v65: bool = eq v62 v64;
  br v65 .then.8 .else.8;
.then.8:
  v68: int = mul u k;
  ret v68;
  jmp .endif.8;
.else.8:
.endif.8:
.entry.9:
  v70: int = const 0;
  v71: bool = gt v v70;
  v73: int = const 2;
  lvn.4: int = div v v73;
  lvn.5: int = mul lvn.4 v73;
  v74: int = sub v lvn.5;
  v75: int = const 0;
  v76: bool = eq v74 v75;
  v77: bool = and v71 v76;
  br v77 .body.9 .exit.9;
.body.9:
  v79: int = const 2;
  v80: int = div v v79;
  v: int = id v80;
  jmp .entry.9;
.exit.9:
  jmp .entry.6;
.exit.6:
}
@gcd3(u: int, v: int): int {
.entry.1:
  lvn.2: bool = eq u v;
  v3: bool = not lvn.2;
  br v3 .body.1 .exit.1;
.body.1:
  v6: bool = gt u v;
  br v6 .then.2 .else.2;
.then.2:
  v9: int = sub u v;
  u: int = id v9;
  jmp .endif.2;
.else.2:
  v12: int = sub v u;
  v: int = id v12;
.endif.2:
  jmp .entry.1;
.exit.1:
  ret u;
}
@gcd4(u: int, v: int): int {
  v2: int = const 0;
  v3: bool = eq v v2;
  br v3 .then.1 .else.1;
.then.1:
  ret u;
  jmp .endif.1;
.else.1:
  lvn.2: int = div u v;
  lvn.3: int = mul lvn.2 v;
  v8: int = sub u lvn.3;
  v9: int = call @gcd4 v v8;
  ret v9;
.endif.1:
}
@gcd5(u: int, v: int): int {
.entry.1:
  v2: int = const 0;
  lvn.2: bool = eq v v2;
  v3: bool = not lvn.2;
  br v3 .body.1 .exit.1;
.body.1:
  v4: int = id u;
  u: int = id v;
  lvn.2: int = div v4 v;
  lvn.3: int = mul lvn.2 v;
  v8: int = sub v4 lvn.3;
  v: int = id v8;
  jmp .entry.1;
.exit.1:
  ret u;
}
@main(a: int, b: int, v: int) {
  v2: int = const 1;
  v3: bool = eq v v2;
  br v3 .then.1 .else.1;
.then.1:
  v6: int = call @gcd1 a b;
  print v6;
  jmp .endif.1;
.else.1:
  v8: int = const 2;
  v9: bool = eq v v8;
  br v9 .then.1.1 .else.1.1;
.then.1.1:
  v12: int = call @gcd2 a b;
  print v12;
  jmp .endif.1;
.else.1.1:
  v14: int = const 3;
  v15: bool = eq v v14;
  br v15 .then.1.2 .else.1.2;
.then.1.2:
  v18: int = call @gcd3 a b;
  print v18;
  jmp .endif.1;
.else.1.2:
  v20: int = const 4;
  v21: bool = eq v v20;
  br v21 .then.1.3 .else.1.3;
.then.1.3:
  v24: int = call @gcd4 a b;
  print v24;
  jmp .endif.1;
.else.1.3:
  v26: int = const 5;
  v27: bool = eq v v26;
  br v27 .then.1.4 .else.1.4;
.then.1.4:
  v30: int = call @gcd5 a b;
  print v30;
  jmp .endif.1;
.else.1.4:
.endif.1:
}
