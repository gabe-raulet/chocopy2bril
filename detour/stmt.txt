A <Function> object is made up of the following:

    *  "name": A name (required)
    * "stmts": A list of <Stmt> objects (optional)
    *  "args": A list of argument variable names (optional)
    *  "type": A return type (optional)
    * "types": A mapping between variables and their types (optional)
    * "inits": A mapping between variables and their initialized literals (optional)

If a <Function> object has a list of argument variable names, then each variable
must have a corresponding entry in the "types" mapping that gives the type of the
corresponding variable argument.

If a <Function> object has any variable declarations in its function body, then each
such variable must have a corresponding entry in both the "types" and "inits" maps,
for the type of the declared variable and the initialized literal value of the declared
variable, respectively.

If a <Function> object has a return type, then the list "stmts" is not optional, and
the last statement in this list must be a <ReturnStmt> object.

A <Program> object is made up of the following:

    * "functions": A list of <Function> objects (required)

A <Program> object must exactly one <Function> satisfying the criteria of
the <MainFunction>. An object `func` satisfies the <MainFunction> criteria
if:

    * func["name"] = "main"
    * "args" not in func
    * "type" not in func
    * func["types"].keys() == func["inits"].keys()

A <PassStmt> object is the following:

    {"stmt" : "pass"}

A <PrintStmt> object is the following:

    {"stmt" : "print", "expr" : <Expr>}

A <ReturnStmt> object is the following:

    {"stmt" : "return", "expr" : <Expr>}

A <AssignStmt> object is the following:

    {"stmt" : "assign", "dest" : <id>, "expr" : <Expr>}

A <Expr> object can be:

    * {}
